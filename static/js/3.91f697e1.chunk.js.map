{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuthed","auth","withAuthRedirect","Component","connect","props","to","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","target","value","onBlur","updateStatus","autoFocus","type","onDoubleClick","ProfileInfo","profile","className","s","descriptionBlock","fullName","src","photos","large","incognitoAvatar","styles","socialNetworkIconsBlock","contacts","facebook","twitter","instagram","youtube","Preloader","Post","item","message","likesCount","maxLength10","maxLength","Textarea","ElementCreator","NewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","validate","required","placeholder","MyPosts","React","memo","postsElements","posts","map","p","key","id","postsBlock","values","addPost","newPostText","MyPostsContainer","profilePage","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.91f697e1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuthed: state.auth.isAuthed\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    const RedirectComponent = (props) => {\r\n        if (!props.isAuthed) return <Redirect to='/login'/>\r\n        return <Component {...props}/>\r\n    }\r\n\r\n    const ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedRedirectComponent;\r\n}\r\n\r\nexport default withAuthRedirect;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__36DSU\",\"socialNetworkIconsBlock\":\"ProfileInfo_socialNetworkIconsBlock__1oh3-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__23VEV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1_fQP\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nlet ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(()=>{\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.target.value);\r\n    }\r\n\r\n    return <div>\r\n        {!editMode\r\n            ? <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || '-----'}</span>\r\n            </div>\r\n            : <div>\r\n                <input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true}\r\n                       value={status} type='text'/>\r\n            </div>}\r\n    </div>\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport styles from './ProfileInfo.module.css';\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport incognitoAvatar from \"../../../assets/images/incognitoAvatar.png\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <b>{profile.fullName}</b><br/>\r\n                <img src={profile.photos.large || incognitoAvatar}/>\r\n                <div>\r\n                    Contact me in socials:\r\n                </div>\r\n                <div className={styles.socialNetworkIconsBlock}>\r\n                    <img\r\n                        src='https://image.flaticon.com/icons/png/128/1384/1384005.png'/>\r\n                    {profile.contacts.facebook}\r\n                    <br/>\r\n                    <img\r\n                        src='https://image.flaticon.com/icons/png/128/1384/1384017.png'/>\r\n                    {profile.contacts.twitter}\r\n                    <br/>\r\n                    <img\r\n                        src='https://image.flaticon.com/icons/png/128/1384/1384015.png'/>\r\n                    {profile.contacts.instagram}\r\n                    <br/>\r\n                    <img\r\n                        src='https://image.flaticon.com/icons/png/128/1384/1384012.png'/>\r\n                    {profile.contacts.youtube}\r\n                </div>\r\n                <div>\r\n                    <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img\r\n                src='https://w7.pngwing.com/pngs/178/419/png-transparent-man-illustration-computer-icons-avatar-login-user-avatar-child-web-design-face-thumbnail.png'/>\r\n            {props.message}\r\n            <div>\r\n                <span>like</span> {props.likesCount}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Post;","import React from \"react\";\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLength, required} from \"../../../utils/validators/validators\";\r\nimport {ElementCreator} from '../../../common/FormControls/FormControl'\r\n\r\nconst maxLength10 = maxLength(10);\r\nconst Textarea = ElementCreator(\"textarea\");\r\n\r\nconst NewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name='newPostText' component={Textarea} validate={[required, maxLength10]}\r\n                   placeholder='Enter post message'/>\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst NewPostFormRedux = reduxForm({form: 'newPost'})(NewPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements = props.posts.map(p => <Post key={p.id} message={p.message}\r\n                                                   likesCount={p.likesCount}/>)\r\n\r\n    let addPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <NewPostFormRedux onSubmit={addPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPost, addPostCreator, updateNewPostTextCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {addPost})(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nlet Profile = (props) => {\r\n    return <div>\r\n        <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n        <MyPostsContainer/>\r\n    </div>\r\n\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport Profile from \"./Profile\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n                        updateStatus={this.props.updateStatus}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter\r\n)(ProfileContainer);"],"sourceRoot":""}